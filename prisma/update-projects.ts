import {
  BuildingStatus,
  PrismaClient,
  ProjectClass,
  ProjectStatus,
  ProjectType
} from "@prisma/client";

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Prisma —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
const prisma = new PrismaClient();

async function main() {
  try {
    console.log("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤...");

    // –ü—Ä–∏–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º DRAFT –Ω–∞ ACTIVE
    const updatedProjects = await prisma.project.updateMany({
      where: {
        status: "DRAFT"
      },
      data: {
        status: "ACTIVE"
      }
    });

    console.log(
      `‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedProjects.count} –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–∞ DRAFT –Ω–∞ ACTIVE`
    );

    // –ü—Ä–∏–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ ID
    const projectId = "YOUR_PROJECT_ID"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –ø—Ä–æ–µ–∫—Ç–∞
    const updatedProject = await prisma.project.update({
      where: {
        id: projectId
      },
      data: {
        name: "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
        description: "–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
        status: "ACTIVE",
        buildingStatus: "UNDER_CONSTRUCTION",
        constructionStatus: 50, // 50% –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
        class: "PREMIUM"
      }
    });

    console.log(`‚úÖ –ü—Ä–æ–µ–∫—Ç ${updatedProject.id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω`);

    // –ü—Ä–∏–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏
    const updatedPremiumProjects = await prisma.project.updateMany({
      where: {
        class: "STANDARD",
        type: "RESIDENTIAL"
      },
      data: {
        class: "COMFORT"
      }
    });

    console.log(
      `‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedPremiumProjects.count} –∂–∏–ª—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –∫–ª–∞—Å—Å–∞ STANDARD –Ω–∞ COMFORT`
    );
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤:", error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏
main()
  .then(() => console.log("üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"))
  .catch(e => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", e);
    process.exit(1);
  });
